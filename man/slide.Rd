% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slide.R
\name{slide}
\alias{slide}
\alias{slide_lgl}
\alias{slide_chr}
\alias{slide_int}
\alias{slide_dbl}
\alias{slide_raw}
\title{Apply a function to a sliding window of a vector}
\usage{
slide(.x, .f, .n, .align = "right", .fill = list(NULL), ...)

slide_lgl(.x, .f, .n, .align = "right", .fill = NA, ...)

slide_chr(.x, .f, .n, .align = "right", .fill = NA, ...)

slide_int(.x, .f, .n, .align = "right", .fill = NA, ...)

slide_dbl(.x, .f, .n, .align = "right", .fill = NA, ...)

slide_raw(.x, .f, .n, .align = "right", .fill = as.raw(0), ...)
}
\arguments{
\item{.x}{A list or atomic vector.}

\item{.f}{A function, formula, or vector (not necessarily atomic).

If a \strong{function}, it is used as is.

If a \strong{formula}, e.g. \code{~ .x + 2}, it is converted to a function. There
are three ways to refer to the arguments:
\itemize{
\item For a single argument function, use \code{.}
\item For a two argument function, use \code{.x} and \code{.y}
\item For more arguments, use \code{..1}, \code{..2}, \code{..3} etc
}

This syntax allows you to create very compact anonymous functions.

If \strong{character vector}, \strong{numeric vector}, or \strong{list}, it is
converted to an extractor function. Character vectors index by
name and numeric vectors index by position; use a list to index
by position and name at different levels. If a component is not
present, the value of \code{.default} will be returned.}

\item{.n}{A positive integer; the length of the sliding window. Needs to be
an odd number for centered alignment.}

\item{.align}{One of \code{"left"} (the default), \code{"center"} or \code{"right"};
Assign the result of function calls to the position at the left, center
or right of the sliding window. Ignored if \code{fill = NULL}.}

\item{.fill}{length-one vector or \code{NULL}; value assigned to the result where
the sliding window exceeds the first or last element of \code{.x}. \code{NULL} means
no filling.}

\item{...}{Additional arguments passed on to the mapped function.}
}
\value{
All functions return a vector the same length as \code{.x} unless
\code{.fill = NULL}.

\code{slide()} returns a list, \code{slide_lgl()} a logical vector, \code{slide_int()} an
integer vector, \code{slide_dbl()} a double vector, \code{slide_chr()} a
character vector, and \code{slide_raw()} a raw vector.
The output of \code{.f} will be automatically typed upwards,
e.g. logical -> integer -> double -> character.

If \code{.x} has \code{names()}, the return value preserves those names unless
\code{.fill = NULL}.
}
\description{
The slide functions apply a function .f over a sliding (or rolling) window of
a vector and (optionally) pad the result such that the length of the
resulting vector matches the input length.
\itemize{
\item \code{slide()} always returns a list.
\item \code{slide_lgl()}, \code{slide_int()}, \code{slide_dbl()}, \code{slide_chr()} and
slide_raw()` each return an atomic vector of the indicated type
(or die trying).

The return value of \code{.f} must be of length one for each window of
\code{.x}. If \code{.f} uses an extractor function shortcut, \code{.default}
can be specified to handle values that are absent or empty.  See
\code{\link[=as_mapper]{as_mapper()}} for more on \code{.default}.
}
}
\examples{
rnorm(n = 40) \%>\%
  slide_dbl(mean, 20)

# Or use an anonymous function
rnorm(n = 40) \%>\%
  slide_dbl(function(x) mean(x[x > median(x)]), 20)

# Or a formula
rnorm(n = 40) \%>\%
  slide_dbl(~ mean(.x[.x > median(.x)]), 20)

}
\concept{roll variants}
